buildscript {
    ext.kotlin_version = "1.2.71"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://maven.ej-technologies.com/repository" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath group: "com.install4j", name: "install4j-gradle", version: "7.0.8"
    }
}

plugins {
    id "java"
    id "application"
}

group "rceditor"
version "1.0"

apply plugin: "kotlin"
apply plugin: "install4j"

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "no.tornado:tornadofx:1.7.17"

    compile "io.reactivex.rxjava2:rxkotlin:2.2.0"
    compile "com.github.thomasnield:rxkotlinfx:2.2.2"

    compile "com.jfoenix:jfoenix:8.0.7"

    compile "de.jensd:fontawesomefx-commons:8.15"
    compile "de.jensd:fontawesomefx-materialicons:2.2.0-5"

    compile "com.github.WycliffeAssociates:kotlin-resource-container:-SNAPSHOT"

    testCompile group: "junit", name: "junit", version: "4.12"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

mainClassName = "org.wa.rceditor.application.MyAppKt"

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from (configurations.compile.collect { zipTree(it) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

install4j {
    installDir = file('/opt/install4j7')
}

task downloadWindowsJre(type: FileDownload) {
    sourceUrl = "https://download.ej-technologies.com/bundles/packed2/windows-amd64-1.8.0_192.tar.gz"
    target = new File("windows-amd64-1.8.0_192.tar.gz")
}

task downloadMacosJre(type: FileDownload) {
    sourceUrl = "https://download.ej-technologies.com/bundles/packed2/macosx-amd64-1.8.0_192.tar.gz"
    target = new File("macos-amd64-1.8.0_192.tar.gz")
}

task downloadLinuxJre(type: FileDownload) {
    sourceUrl = "http://javadl.oracle.com/webapps/download/AutoDL?BundleId=235717_2787e4a523244c269598db4e85c51e0c"
    target = new File("linux-amd64-1.8.0_192.tar.gz")
}

task media(type: com.install4j.gradle.Install4jTask) {
    projectFile = file("rceditor.install4j")
    release = version
    verbose = true

    dependsOn clean
    dependsOn build
    build.mustRunAfter clean

    dependsOn downloadWindowsJre
    dependsOn downloadMacosJre
    dependsOn downloadLinuxJre
}

class FileDownload extends DefaultTask {
    @Input
    String sourceUrl

    @OutputFile
    File target

    @TaskAction
    void download() {
        ant.get(src: sourceUrl, dest: target)
    }
}